//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharesTradeService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class meal_ticketEntities : DbContext
    {
        public meal_ticketEntities()
            : base("name=meal_ticketEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<t_broker> t_broker { get; set; }
        public virtual DbSet<t_broker_department> t_broker_department { get; set; }
        public virtual DbSet<t_broker_host> t_broker_host { get; set; }
        public virtual DbSet<t_server> t_server { get; set; }
        public virtual DbSet<t_account_shares_entrust_manager> t_account_shares_entrust_manager { get; set; }
        public virtual DbSet<t_account_shares_entrust> t_account_shares_entrust { get; set; }
        public virtual DbSet<t_shares_limit> t_shares_limit { get; set; }
        public virtual DbSet<t_shares_limit_date> t_shares_limit_date { get; set; }
        public virtual DbSet<t_shares_limit_date_group> t_shares_limit_date_group { get; set; }
        public virtual DbSet<t_shares_limit_time> t_shares_limit_time { get; set; }
        public virtual DbSet<t_dim_time> t_dim_time { get; set; }
        public virtual DbSet<t_account_shares_entrust_manager_dealdetails> t_account_shares_entrust_manager_dealdetails { get; set; }
        public virtual DbSet<t_shares_limit_tradequota> t_shares_limit_tradequota { get; set; }
        public virtual DbSet<t_shares_limit_tradequota_other> t_shares_limit_tradequota_other { get; set; }
        public virtual DbSet<t_test_deal> t_test_deal { get; set; }
        public virtual DbSet<t_test_entrust> t_test_entrust { get; set; }
        public virtual DbSet<t_broker_account_shares_rel> t_broker_account_shares_rel { get; set; }
        public virtual DbSet<t_account_shares_hold_manager> t_account_shares_hold_manager { get; set; }
        public virtual DbSet<t_shares_all> t_shares_all { get; set; }
        public virtual DbSet<t_broker_account_shares_rel_entrust> t_broker_account_shares_rel_entrust { get; set; }
        public virtual DbSet<t_broker_account_info_position> t_broker_account_info_position { get; set; }
        public virtual DbSet<t_broker_account_info_capital> t_broker_account_info_capital { get; set; }
        public virtual DbSet<t_system_param> t_system_param { get; set; }
        public virtual DbSet<t_server_broker_account_rel> t_server_broker_account_rel { get; set; }
        public virtual DbSet<t_broker_account_info> t_broker_account_info { get; set; }
        public virtual DbSet<t_account_baseinfo> t_account_baseinfo { get; set; }
        public virtual DbSet<t_account_shares_hold> t_account_shares_hold { get; set; }
        public virtual DbSet<t_notice_hold> t_notice_hold { get; set; }
        public virtual DbSet<t_account_shares_entrust_manager_dealdetails_real> t_account_shares_entrust_manager_dealdetails_real { get; set; }
        public virtual DbSet<v_shares_quotes_last> v_shares_quotes_last { get; set; }
    
        public virtual int P_TryToCancelEntrust(Nullable<long> entrustId)
        {
            var entrustIdParameter = entrustId.HasValue ?
                new ObjectParameter("entrustId", entrustId) :
                new ObjectParameter("entrustId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_TryToCancelEntrust", entrustIdParameter);
        }
    
        public virtual int P_TradeFinish(Nullable<long> entrustManagerId, Nullable<long> dealPrice, Nullable<int> dealCount)
        {
            var entrustManagerIdParameter = entrustManagerId.HasValue ?
                new ObjectParameter("entrustManagerId", entrustManagerId) :
                new ObjectParameter("entrustManagerId", typeof(long));
    
            var dealPriceParameter = dealPrice.HasValue ?
                new ObjectParameter("dealPrice", dealPrice) :
                new ObjectParameter("dealPrice", typeof(long));
    
            var dealCountParameter = dealCount.HasValue ?
                new ObjectParameter("dealCount", dealCount) :
                new ObjectParameter("dealCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_TradeFinish", entrustManagerIdParameter, dealPriceParameter, dealCountParameter);
        }
    
        public virtual int P_Check_TradeTime(Nullable<int> market, string sharesCode, Nullable<System.DateTime> currTime, ObjectParameter errorCode)
        {
            var marketParameter = market.HasValue ?
                new ObjectParameter("market", market) :
                new ObjectParameter("market", typeof(int));
    
            var sharesCodeParameter = sharesCode != null ?
                new ObjectParameter("sharesCode", sharesCode) :
                new ObjectParameter("sharesCode", typeof(string));
    
            var currTimeParameter = currTime.HasValue ?
                new ObjectParameter("currTime", currTime) :
                new ObjectParameter("currTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Check_TradeTime", marketParameter, sharesCodeParameter, currTimeParameter, errorCode);
        }
    }
}
