//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MealTicket_Handler
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class meal_ticketEntities : DbContext
    {
        public meal_ticketEntities()
            : base("name=meal_ticketEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<t_account_login_token> t_account_login_token { get; set; }
        public virtual DbSet<t_authority_account_visitlog> t_authority_account_visitlog { get; set; }
        public virtual DbSet<t_account_api> t_account_api { get; set; }
        public virtual DbSet<t_account_verifyCode> t_account_verifyCode { get; set; }
        public virtual DbSet<t_shares_quotes> t_shares_quotes { get; set; }
        public virtual DbSet<t_account_wallet> t_account_wallet { get; set; }
        public virtual DbSet<t_account_baseinfo> t_account_baseinfo { get; set; }
        public virtual DbSet<t_message> t_message { get; set; }
        public virtual DbSet<t_message_group> t_message_group { get; set; }
        public virtual DbSet<t_message_group_rel> t_message_group_rel { get; set; }
        public virtual DbSet<t_helpcenter_question_content> t_helpcenter_question_content { get; set; }
        public virtual DbSet<t_helpcenter_question_type> t_helpcenter_question_type { get; set; }
        public virtual DbSet<t_helpcenter_question_type_content_rel> t_helpcenter_question_type_content_rel { get; set; }
        public virtual DbSet<t_broker> t_broker { get; set; }
        public virtual DbSet<t_bank> t_bank { get; set; }
        public virtual DbSet<t_account_bank_card> t_account_bank_card { get; set; }
        public virtual DbSet<t_account_cash_record> t_account_cash_record { get; set; }
        public virtual DbSet<t_information> t_information { get; set; }
        public virtual DbSet<t_recharge_record> t_recharge_record { get; set; }
        public virtual DbSet<t_system_param> t_system_param { get; set; }
        public virtual DbSet<t_pay_callback> t_pay_callback { get; set; }
        public virtual DbSet<t_shares_today> t_shares_today { get; set; }
        public virtual DbSet<t_banner> t_banner { get; set; }
        public virtual DbSet<t_page_setting> t_page_setting { get; set; }
        public virtual DbSet<t_payment_account> t_payment_account { get; set; }
        public virtual DbSet<t_payment_account_settings> t_payment_account_settings { get; set; }
        public virtual DbSet<t_payment_channel> t_payment_channel { get; set; }
        public virtual DbSet<t_payment_channel_account_rel> t_payment_channel_account_rel { get; set; }
        public virtual DbSet<t_banner_group> t_banner_group { get; set; }
        public virtual DbSet<t_account_shares_entrust_manager> t_account_shares_entrust_manager { get; set; }
        public virtual DbSet<t_account_realname> t_account_realname { get; set; }
        public virtual DbSet<t_account_shares_entrust> t_account_shares_entrust { get; set; }
        public virtual DbSet<t_account_shares_hold_manager> t_account_shares_hold_manager { get; set; }
        public virtual DbSet<t_dim_time> t_dim_time { get; set; }
        public virtual DbSet<t_shares_limit_date> t_shares_limit_date { get; set; }
        public virtual DbSet<t_shares_limit_date_group> t_shares_limit_date_group { get; set; }
        public virtual DbSet<t_shares_limit_time> t_shares_limit_time { get; set; }
        public virtual DbSet<t_shares_limit_traderules_other> t_shares_limit_traderules_other { get; set; }
        public virtual DbSet<t_account_shares_entrust_manager_dealdetails> t_account_shares_entrust_manager_dealdetails { get; set; }
        public virtual DbSet<t_account_wallet_change_record> t_account_wallet_change_record { get; set; }
        public virtual DbSet<t_customerservice_setting> t_customerservice_setting { get; set; }
        public virtual DbSet<t_shares_all> t_shares_all { get; set; }
        public virtual DbSet<t_shares_suspension> t_shares_suspension { get; set; }
        public virtual DbSet<t_broker_account_shares_rel> t_broker_account_shares_rel { get; set; }
        public virtual DbSet<t_shares_limit_traderules> t_shares_limit_traderules { get; set; }
        public virtual DbSet<t_shares_limit_fundmultiple> t_shares_limit_fundmultiple { get; set; }
        public virtual DbSet<t_recharge_abnormal_refund_record> t_recharge_abnormal_refund_record { get; set; }
        public virtual DbSet<t_broker_account_info> t_broker_account_info { get; set; }
        public virtual DbSet<t_server> t_server { get; set; }
        public virtual DbSet<t_server_broker_account_rel> t_server_broker_account_rel { get; set; }
        public virtual DbSet<t_shares_search> t_shares_search { get; set; }
        public virtual DbSet<t_sms_channel> t_sms_channel { get; set; }
        public virtual DbSet<t_sms_channel_app> t_sms_channel_app { get; set; }
        public virtual DbSet<t_sms_sign> t_sms_sign { get; set; }
        public virtual DbSet<t_sms_template> t_sms_template { get; set; }
        public virtual DbSet<t_sms_callback> t_sms_callback { get; set; }
        public virtual DbSet<t_notice_send_record> t_notice_send_record { get; set; }
        public virtual DbSet<t_notice_send_record_details> t_notice_send_record_details { get; set; }
        public virtual DbSet<t_account_shares_hold> t_account_shares_hold { get; set; }
        public virtual DbSet<t_notice_hold> t_notice_hold { get; set; }
        public virtual DbSet<t_shares_allot> t_shares_allot { get; set; }
        public virtual DbSet<t_account_par_setting> t_account_par_setting { get; set; }
        public virtual DbSet<t_shares_transactiondata> t_shares_transactiondata { get; set; }
        public virtual DbSet<t_account_loginlog> t_account_loginlog { get; set; }
        public virtual DbSet<t_shares_monitor_details> t_shares_monitor_details { get; set; }
        public virtual DbSet<t_shares_monitor> t_shares_monitor { get; set; }
        public virtual DbSet<t_payment_channel_group> t_payment_channel_group { get; set; }
        public virtual DbSet<t_app_version> t_app_version { get; set; }
        public virtual DbSet<t_shares_limit_fundmultiple_account> t_shares_limit_fundmultiple_account { get; set; }
        public virtual DbSet<t_account_follow_apply_record> t_account_follow_apply_record { get; set; }
        public virtual DbSet<t_account_follow_rel> t_account_follow_rel { get; set; }
    
        public virtual int P_AccountLogin(string mobile, string loginPassword, ObjectParameter errorCode, ObjectParameter errorMessage, ObjectParameter token, ObjectParameter accountId)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var loginPasswordParameter = loginPassword != null ?
                new ObjectParameter("loginPassword", loginPassword) :
                new ObjectParameter("loginPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AccountLogin", mobileParameter, loginPasswordParameter, errorCode, errorMessage, token, accountId);
        }
    
        public virtual int P_CheckAccountLogin(string token, ObjectParameter errorCode, ObjectParameter errorMessage, ObjectParameter accountId)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CheckAccountLogin", tokenParameter, errorCode, errorMessage, accountId);
        }
    
        public virtual int P_CreatePicVerifyCode(string mobile, Nullable<int> businessType, string picCode, string picCodeImgUrl, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var businessTypeParameter = businessType.HasValue ?
                new ObjectParameter("businessType", businessType) :
                new ObjectParameter("businessType", typeof(int));
    
            var picCodeParameter = picCode != null ?
                new ObjectParameter("picCode", picCode) :
                new ObjectParameter("picCode", typeof(string));
    
            var picCodeImgUrlParameter = picCodeImgUrl != null ?
                new ObjectParameter("picCodeImgUrl", picCodeImgUrl) :
                new ObjectParameter("picCodeImgUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CreatePicVerifyCode", mobileParameter, businessTypeParameter, picCodeParameter, picCodeImgUrlParameter, errorCode, errorMessage);
        }
    
        public virtual int P_CreateSmsVerifyCode(string mobile, Nullable<int> businessType, string smsVerifyCode, string picCode, ObjectParameter operationCode, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var businessTypeParameter = businessType.HasValue ?
                new ObjectParameter("businessType", businessType) :
                new ObjectParameter("businessType", typeof(int));
    
            var smsVerifyCodeParameter = smsVerifyCode != null ?
                new ObjectParameter("smsVerifyCode", smsVerifyCode) :
                new ObjectParameter("smsVerifyCode", typeof(string));
    
            var picCodeParameter = picCode != null ?
                new ObjectParameter("picCode", picCode) :
                new ObjectParameter("picCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CreateSmsVerifyCode", mobileParameter, businessTypeParameter, smsVerifyCodeParameter, picCodeParameter, operationCode, errorCode, errorMessage);
        }
    
        public virtual int P_AccountRegister(string mobile, string loginPassword, Nullable<int> actionCode, string verifycode, string referRecommandCode, string regIp, string deviceUA, ObjectParameter errorCode, ObjectParameter errorMessage, ObjectParameter accountId)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var loginPasswordParameter = loginPassword != null ?
                new ObjectParameter("loginPassword", loginPassword) :
                new ObjectParameter("loginPassword", typeof(string));
    
            var actionCodeParameter = actionCode.HasValue ?
                new ObjectParameter("actionCode", actionCode) :
                new ObjectParameter("actionCode", typeof(int));
    
            var verifycodeParameter = verifycode != null ?
                new ObjectParameter("verifycode", verifycode) :
                new ObjectParameter("verifycode", typeof(string));
    
            var referRecommandCodeParameter = referRecommandCode != null ?
                new ObjectParameter("referRecommandCode", referRecommandCode) :
                new ObjectParameter("referRecommandCode", typeof(string));
    
            var regIpParameter = regIp != null ?
                new ObjectParameter("regIp", regIp) :
                new ObjectParameter("regIp", typeof(string));
    
            var deviceUAParameter = deviceUA != null ?
                new ObjectParameter("deviceUA", deviceUA) :
                new ObjectParameter("deviceUA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AccountRegister", mobileParameter, loginPasswordParameter, actionCodeParameter, verifycodeParameter, referRecommandCodeParameter, regIpParameter, deviceUAParameter, errorCode, errorMessage, accountId);
        }
    
        public virtual int P_AccountForgetPassword(string mobile, Nullable<int> actionCode, string verifycode, string newLoginPassword, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var actionCodeParameter = actionCode.HasValue ?
                new ObjectParameter("actionCode", actionCode) :
                new ObjectParameter("actionCode", typeof(int));
    
            var verifycodeParameter = verifycode != null ?
                new ObjectParameter("verifycode", verifycode) :
                new ObjectParameter("verifycode", typeof(string));
    
            var newLoginPasswordParameter = newLoginPassword != null ?
                new ObjectParameter("newLoginPassword", newLoginPassword) :
                new ObjectParameter("newLoginPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AccountForgetPassword", mobileParameter, actionCodeParameter, verifycodeParameter, newLoginPasswordParameter, errorCode, errorMessage);
        }
    
        public virtual int P_AccountModifyMobile(Nullable<long> accountId, string newMobile, Nullable<int> actionCode, string verifycode, ObjectParameter errorCode, ObjectParameter errorMessage, ObjectParameter token)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var newMobileParameter = newMobile != null ?
                new ObjectParameter("newMobile", newMobile) :
                new ObjectParameter("newMobile", typeof(string));
    
            var actionCodeParameter = actionCode.HasValue ?
                new ObjectParameter("actionCode", actionCode) :
                new ObjectParameter("actionCode", typeof(int));
    
            var verifycodeParameter = verifycode != null ?
                new ObjectParameter("verifycode", verifycode) :
                new ObjectParameter("verifycode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AccountModifyMobile", accountIdParameter, newMobileParameter, actionCodeParameter, verifycodeParameter, errorCode, errorMessage, token);
        }
    
        public virtual int P_AccountModifyPassword(Nullable<long> accountId, string oldLoginPassword, string newLoginPassword, ObjectParameter errorCode, ObjectParameter errorMessage, ObjectParameter token)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var oldLoginPasswordParameter = oldLoginPassword != null ?
                new ObjectParameter("oldLoginPassword", oldLoginPassword) :
                new ObjectParameter("oldLoginPassword", typeof(string));
    
            var newLoginPasswordParameter = newLoginPassword != null ?
                new ObjectParameter("newLoginPassword", newLoginPassword) :
                new ObjectParameter("newLoginPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AccountModifyPassword", accountIdParameter, oldLoginPasswordParameter, newLoginPasswordParameter, errorCode, errorMessage, token);
        }
    
        public virtual int P_AccountSetRefer(Nullable<long> accountId, string recommandCode, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var recommandCodeParameter = recommandCode != null ?
                new ObjectParameter("recommandCode", recommandCode) :
                new ObjectParameter("recommandCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AccountSetRefer", accountIdParameter, recommandCodeParameter, errorCode, errorMessage);
        }
    
        public virtual int P_SetTradeClosingTime(Nullable<long> accountId, Nullable<long> holdId, Nullable<System.DateTime> closingTime, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var holdIdParameter = holdId.HasValue ?
                new ObjectParameter("holdId", holdId) :
                new ObjectParameter("holdId", typeof(long));
    
            var closingTimeParameter = closingTime.HasValue ?
                new ObjectParameter("closingTime", closingTime) :
                new ObjectParameter("closingTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_SetTradeClosingTime", accountIdParameter, holdIdParameter, closingTimeParameter, errorCode, errorMessage);
        }
    
        public virtual int P_MakeupDeposit(Nullable<long> accountId, Nullable<long> holdId, Nullable<long> deposit, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var holdIdParameter = holdId.HasValue ?
                new ObjectParameter("holdId", holdId) :
                new ObjectParameter("holdId", typeof(long));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("deposit", deposit) :
                new ObjectParameter("deposit", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_MakeupDeposit", accountIdParameter, holdIdParameter, depositParameter, errorCode, errorMessage);
        }
    
        public virtual int P_BindBankCard(Nullable<long> accountId, string mobile, string verifyCode, Nullable<int> actionCode, string realName, string cardNumber, string bankCode, string cardBreed, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var verifyCodeParameter = verifyCode != null ?
                new ObjectParameter("verifyCode", verifyCode) :
                new ObjectParameter("verifyCode", typeof(string));
    
            var actionCodeParameter = actionCode.HasValue ?
                new ObjectParameter("actionCode", actionCode) :
                new ObjectParameter("actionCode", typeof(int));
    
            var realNameParameter = realName != null ?
                new ObjectParameter("realName", realName) :
                new ObjectParameter("realName", typeof(string));
    
            var cardNumberParameter = cardNumber != null ?
                new ObjectParameter("cardNumber", cardNumber) :
                new ObjectParameter("cardNumber", typeof(string));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("bankCode", bankCode) :
                new ObjectParameter("bankCode", typeof(string));
    
            var cardBreedParameter = cardBreed != null ?
                new ObjectParameter("cardBreed", cardBreed) :
                new ObjectParameter("cardBreed", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_BindBankCard", accountIdParameter, mobileParameter, verifyCodeParameter, actionCodeParameter, realNameParameter, cardNumberParameter, bankCodeParameter, cardBreedParameter, errorCode, errorMessage);
        }
    
        public virtual int P_CashApply(Nullable<long> accountId, Nullable<long> bankCardId, Nullable<long> amount, Nullable<int> cashType, string transactionPassword, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var bankCardIdParameter = bankCardId.HasValue ?
                new ObjectParameter("bankCardId", bankCardId) :
                new ObjectParameter("bankCardId", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(long));
    
            var cashTypeParameter = cashType.HasValue ?
                new ObjectParameter("cashType", cashType) :
                new ObjectParameter("cashType", typeof(int));
    
            var transactionPasswordParameter = transactionPassword != null ?
                new ObjectParameter("transactionPassword", transactionPassword) :
                new ObjectParameter("transactionPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CashApply", accountIdParameter, bankCardIdParameter, amountParameter, cashTypeParameter, transactionPasswordParameter, errorCode, errorMessage);
        }
    
        public virtual int P_CreateRechargeOrder(Nullable<long> accountId, string channelCode, Nullable<long> rechargeAmount, Nullable<long> payAmount, Nullable<long> paymentAccountId, Nullable<bool> isSuccess, ObjectParameter errorCode, ObjectParameter errorMessage, ObjectParameter orderId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var channelCodeParameter = channelCode != null ?
                new ObjectParameter("channelCode", channelCode) :
                new ObjectParameter("channelCode", typeof(string));
    
            var rechargeAmountParameter = rechargeAmount.HasValue ?
                new ObjectParameter("rechargeAmount", rechargeAmount) :
                new ObjectParameter("rechargeAmount", typeof(long));
    
            var payAmountParameter = payAmount.HasValue ?
                new ObjectParameter("payAmount", payAmount) :
                new ObjectParameter("payAmount", typeof(long));
    
            var paymentAccountIdParameter = paymentAccountId.HasValue ?
                new ObjectParameter("paymentAccountId", paymentAccountId) :
                new ObjectParameter("paymentAccountId", typeof(long));
    
            var isSuccessParameter = isSuccess.HasValue ?
                new ObjectParameter("isSuccess", isSuccess) :
                new ObjectParameter("isSuccess", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CreateRechargeOrder", accountIdParameter, channelCodeParameter, rechargeAmountParameter, payAmountParameter, paymentAccountIdParameter, isSuccessParameter, errorCode, errorMessage, orderId);
        }
    
        public virtual int P_Recharge_PayResultCallback(string orderSN, Nullable<long> totalAmount)
        {
            var orderSNParameter = orderSN != null ?
                new ObjectParameter("orderSN", orderSN) :
                new ObjectParameter("orderSN", typeof(string));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("totalAmount", totalAmount) :
                new ObjectParameter("totalAmount", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Recharge_PayResultCallback", orderSNParameter, totalAmountParameter);
        }
    
        public virtual int P_ApplyTradeBuy(Nullable<long> accountId, Nullable<int> market, string sharesCode, Nullable<long> buyAmount, Nullable<int> fundMultiple, Nullable<long> entrustPrice, Nullable<System.DateTime> closingTime, Nullable<bool> isFollow, ObjectParameter errorCode, ObjectParameter errorMessage, ObjectParameter buyId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var marketParameter = market.HasValue ?
                new ObjectParameter("market", market) :
                new ObjectParameter("market", typeof(int));
    
            var sharesCodeParameter = sharesCode != null ?
                new ObjectParameter("sharesCode", sharesCode) :
                new ObjectParameter("sharesCode", typeof(string));
    
            var buyAmountParameter = buyAmount.HasValue ?
                new ObjectParameter("buyAmount", buyAmount) :
                new ObjectParameter("buyAmount", typeof(long));
    
            var fundMultipleParameter = fundMultiple.HasValue ?
                new ObjectParameter("fundMultiple", fundMultiple) :
                new ObjectParameter("fundMultiple", typeof(int));
    
            var entrustPriceParameter = entrustPrice.HasValue ?
                new ObjectParameter("entrustPrice", entrustPrice) :
                new ObjectParameter("entrustPrice", typeof(long));
    
            var closingTimeParameter = closingTime.HasValue ?
                new ObjectParameter("closingTime", closingTime) :
                new ObjectParameter("closingTime", typeof(System.DateTime));
    
            var isFollowParameter = isFollow.HasValue ?
                new ObjectParameter("isFollow", isFollow) :
                new ObjectParameter("isFollow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ApplyTradeBuy", accountIdParameter, marketParameter, sharesCodeParameter, buyAmountParameter, fundMultipleParameter, entrustPriceParameter, closingTimeParameter, isFollowParameter, errorCode, errorMessage, buyId);
        }
    
        public virtual int P_AccountSetTransactionPassword(string transactionPassword, string userToken, ObjectParameter errorCode, ObjectParameter errorMessage, ObjectParameter token)
        {
            var transactionPasswordParameter = transactionPassword != null ?
                new ObjectParameter("transactionPassword", transactionPassword) :
                new ObjectParameter("transactionPassword", typeof(string));
    
            var userTokenParameter = userToken != null ?
                new ObjectParameter("userToken", userToken) :
                new ObjectParameter("userToken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AccountSetTransactionPassword", transactionPasswordParameter, userTokenParameter, errorCode, errorMessage, token);
        }
    
        public virtual int P_AccountModifyTransactionPassword(Nullable<long> accountId, string oldTransactionPassword, string newTransactionPassword, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var oldTransactionPasswordParameter = oldTransactionPassword != null ?
                new ObjectParameter("oldTransactionPassword", oldTransactionPassword) :
                new ObjectParameter("oldTransactionPassword", typeof(string));
    
            var newTransactionPasswordParameter = newTransactionPassword != null ?
                new ObjectParameter("newTransactionPassword", newTransactionPassword) :
                new ObjectParameter("newTransactionPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AccountModifyTransactionPassword", accountIdParameter, oldTransactionPasswordParameter, newTransactionPasswordParameter, errorCode, errorMessage);
        }
    
        public virtual int P_ApplyTradeSell(Nullable<long> accountId, Nullable<long> holdId, Nullable<int> sellCount, Nullable<int> sellType, Nullable<long> sellPrice, Nullable<int> type, Nullable<bool> isFollow, ObjectParameter errorCode, ObjectParameter errorMessage, ObjectParameter sellId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var holdIdParameter = holdId.HasValue ?
                new ObjectParameter("holdId", holdId) :
                new ObjectParameter("holdId", typeof(long));
    
            var sellCountParameter = sellCount.HasValue ?
                new ObjectParameter("sellCount", sellCount) :
                new ObjectParameter("sellCount", typeof(int));
    
            var sellTypeParameter = sellType.HasValue ?
                new ObjectParameter("sellType", sellType) :
                new ObjectParameter("sellType", typeof(int));
    
            var sellPriceParameter = sellPrice.HasValue ?
                new ObjectParameter("sellPrice", sellPrice) :
                new ObjectParameter("sellPrice", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var isFollowParameter = isFollow.HasValue ?
                new ObjectParameter("isFollow", isFollow) :
                new ObjectParameter("isFollow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ApplyTradeSell", accountIdParameter, holdIdParameter, sellCountParameter, sellTypeParameter, sellPriceParameter, typeParameter, isFollowParameter, errorCode, errorMessage, sellId);
        }
    
        public virtual int P_AccountApplyRealName(Nullable<long> accountId, string imgUrlFront, string imgUrlBack, string realName, Nullable<int> sex, string birthDay, string cardNo, string address, string checkOrg, string validDateFrom, string validDateTo, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var imgUrlFrontParameter = imgUrlFront != null ?
                new ObjectParameter("imgUrlFront", imgUrlFront) :
                new ObjectParameter("imgUrlFront", typeof(string));
    
            var imgUrlBackParameter = imgUrlBack != null ?
                new ObjectParameter("imgUrlBack", imgUrlBack) :
                new ObjectParameter("imgUrlBack", typeof(string));
    
            var realNameParameter = realName != null ?
                new ObjectParameter("realName", realName) :
                new ObjectParameter("realName", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(int));
    
            var birthDayParameter = birthDay != null ?
                new ObjectParameter("birthDay", birthDay) :
                new ObjectParameter("birthDay", typeof(string));
    
            var cardNoParameter = cardNo != null ?
                new ObjectParameter("cardNo", cardNo) :
                new ObjectParameter("cardNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var checkOrgParameter = checkOrg != null ?
                new ObjectParameter("checkOrg", checkOrg) :
                new ObjectParameter("checkOrg", typeof(string));
    
            var validDateFromParameter = validDateFrom != null ?
                new ObjectParameter("validDateFrom", validDateFrom) :
                new ObjectParameter("validDateFrom", typeof(string));
    
            var validDateToParameter = validDateTo != null ?
                new ObjectParameter("validDateTo", validDateTo) :
                new ObjectParameter("validDateTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AccountApplyRealName", accountIdParameter, imgUrlFrontParameter, imgUrlBackParameter, realNameParameter, sexParameter, birthDayParameter, cardNoParameter, addressParameter, checkOrgParameter, validDateFromParameter, validDateToParameter, errorCode, errorMessage);
        }
    
        public virtual int P_ApplyTradeCancel(Nullable<long> accountId, Nullable<long> entrustId, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var entrustIdParameter = entrustId.HasValue ?
                new ObjectParameter("entrustId", entrustId) :
                new ObjectParameter("entrustId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ApplyTradeCancel", accountIdParameter, entrustIdParameter, errorCode, errorMessage);
        }
    
        public virtual int P_TradeFinish(Nullable<long> entrustManagerId, Nullable<long> dealPrice, Nullable<int> dealCount)
        {
            var entrustManagerIdParameter = entrustManagerId.HasValue ?
                new ObjectParameter("entrustManagerId", entrustManagerId) :
                new ObjectParameter("entrustManagerId", typeof(long));
    
            var dealPriceParameter = dealPrice.HasValue ?
                new ObjectParameter("dealPrice", dealPrice) :
                new ObjectParameter("dealPrice", typeof(long));
    
            var dealCountParameter = dealCount.HasValue ?
                new ObjectParameter("dealCount", dealCount) :
                new ObjectParameter("dealCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_TradeFinish", entrustManagerIdParameter, dealPriceParameter, dealCountParameter);
        }
    
        public virtual int P_Calculate_DepositChange_Hold(Nullable<long> holdId, Nullable<long> changeAmount, string description)
        {
            var holdIdParameter = holdId.HasValue ?
                new ObjectParameter("holdId", holdId) :
                new ObjectParameter("holdId", typeof(long));
    
            var changeAmountParameter = changeAmount.HasValue ?
                new ObjectParameter("changeAmount", changeAmount) :
                new ObjectParameter("changeAmount", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Calculate_DepositChange_Hold", holdIdParameter, changeAmountParameter, descriptionParameter);
        }
    
        public virtual int P_Calculate_Recommend_Prize(Nullable<long> accountId, Nullable<int> prizeType, Nullable<long> prizeAmount, Nullable<long> contextId, Nullable<int> contextType, ObjectParameter remainAmount)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var prizeTypeParameter = prizeType.HasValue ?
                new ObjectParameter("prizeType", prizeType) :
                new ObjectParameter("prizeType", typeof(int));
    
            var prizeAmountParameter = prizeAmount.HasValue ?
                new ObjectParameter("prizeAmount", prizeAmount) :
                new ObjectParameter("prizeAmount", typeof(long));
    
            var contextIdParameter = contextId.HasValue ?
                new ObjectParameter("contextId", contextId) :
                new ObjectParameter("contextId", typeof(long));
    
            var contextTypeParameter = contextType.HasValue ?
                new ObjectParameter("contextType", contextType) :
                new ObjectParameter("contextType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Calculate_Recommend_Prize", accountIdParameter, prizeTypeParameter, prizeAmountParameter, contextIdParameter, contextTypeParameter, remainAmount);
        }
    
        public virtual int P_Check_TradeTime(Nullable<int> market, string sharesCode, Nullable<System.DateTime> currTime, ObjectParameter errorCode)
        {
            var marketParameter = market.HasValue ?
                new ObjectParameter("market", market) :
                new ObjectParameter("market", typeof(int));
    
            var sharesCodeParameter = sharesCode != null ?
                new ObjectParameter("sharesCode", sharesCode) :
                new ObjectParameter("sharesCode", typeof(string));
    
            var currTimeParameter = currTime.HasValue ?
                new ObjectParameter("currTime", currTime) :
                new ObjectParameter("currTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Check_TradeTime", marketParameter, sharesCodeParameter, currTimeParameter, errorCode);
        }
    
        public virtual int P_Recharge_Close()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Recharge_Close");
        }
    
        public virtual int P_Calculate_WalletChange_Platform(string typeCode, Nullable<long> inComeAmount, Nullable<long> confirmDeposit, Nullable<long> context)
        {
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("typeCode", typeCode) :
                new ObjectParameter("typeCode", typeof(string));
    
            var inComeAmountParameter = inComeAmount.HasValue ?
                new ObjectParameter("inComeAmount", inComeAmount) :
                new ObjectParameter("inComeAmount", typeof(long));
    
            var confirmDepositParameter = confirmDeposit.HasValue ?
                new ObjectParameter("confirmDeposit", confirmDeposit) :
                new ObjectParameter("confirmDeposit", typeof(long));
    
            var contextParameter = context.HasValue ?
                new ObjectParameter("context", context) :
                new ObjectParameter("context", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Calculate_WalletChange_Platform", typeCodeParameter, inComeAmountParameter, confirmDepositParameter, contextParameter);
        }
    
        public virtual int P_Notice_Execute(string apiurl, Nullable<long> accountId, string tempPar)
        {
            var apiurlParameter = apiurl != null ?
                new ObjectParameter("apiurl", apiurl) :
                new ObjectParameter("apiurl", typeof(string));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var tempParParameter = tempPar != null ?
                new ObjectParameter("tempPar", tempPar) :
                new ObjectParameter("tempPar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Notice_Execute", apiurlParameter, accountIdParameter, tempParParameter);
        }
    
        public virtual int P_AccountSharesAllot(Nullable<long> allotId)
        {
            var allotIdParameter = allotId.HasValue ?
                new ObjectParameter("allotId", allotId) :
                new ObjectParameter("allotId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AccountSharesAllot", allotIdParameter);
        }
    
        public virtual int P_CashCancel(Nullable<long> accountId, Nullable<long> cashRecordId, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var cashRecordIdParameter = cashRecordId.HasValue ?
                new ObjectParameter("cashRecordId", cashRecordId) :
                new ObjectParameter("cashRecordId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CashCancel", accountIdParameter, cashRecordIdParameter, errorCode, errorMessage);
        }
    
        public virtual int P_FollowApply(Nullable<long> accountId, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_FollowApply", accountIdParameter, errorCode, errorMessage);
        }
    
        public virtual int P_FollowCancel(Nullable<long> accountId, ObjectParameter errorCode, ObjectParameter errorMessage)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_FollowCancel", accountIdParameter, errorCode, errorMessage);
        }
    }
}
